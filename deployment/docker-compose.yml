# GeoSight is UNICEF's geospatial web-based business intelligence platform.
#
# Contact : geosight-no-reply@unicef.org
#
# .. note:: This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as published by
#    the Free Software Foundation; either version 3 of the License, or
#    (at your option) any later version.
#
# __author__ = 'irwan@kartoza.com'
# __date__ = '13/06/2023'
# __copyright__ = ('Copyright 2023, Unicef')

version: '3.4'

volumes:
  static-data:
  media-data:
  database:
  backups-data:
  rabbitmq:
  redis-data:

x-common-django:
  &default-common-django
  image: kartoza/geosight:${DJANGO_TAG:-0.3.0}
  environment:
    # editable in .env
    - DATABASE_NAME=${DATABASE_NAME:-django}
    - DATABASE_USERNAME=${DATABASE_USERNAME:-docker}
    - DATABASE_PASSWORD=${DATABASE_PASSWORD:-docker}
    - DATABASE_HOST=${DATABASE_HOST:-db}
    - RABBITMQ_HOST=${RABBITMQ_HOST:-rabbitmq}
    - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE:-core.settings.prod}
    - INITIAL_FIXTURES=${INITIAL_FIXTURES:-True}
    - SECRET_KEY=${SECRET_KEY:-''}

    # Redis config
    - REDIS_HOST=${REDIS_HOST:-redis}
    - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}

    # Email where alters should be sent. This will be used by let's encrypt and as the django admin email.
    - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
    - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
    - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@example.com}
    - SENTRY_DSN=${SENTRY_DSN:-''}
    - SENTRY_ENVIRONMENT=${SENTRY_ENVIRONMENT:-staging}

    # Azure configuration
    - AZURE_B2C_CLIENT_ID=${AZURE_B2C_CLIENT_ID:-''}
    - AZURE_B2C_CLIENT_SECRET=${AZURE_B2C_CLIENT_SECRET:-''}
    - AZURE_B2C_TENANT_NAME=${AZURE_B2C_TENANT_NAME:-''}
    - AZURE_B2C_POLICY_NAME=${AZURE_B2C_POLICY_NAME:-''}

    # email variables
    - EMAIL_HOST=${EMAIL_HOST:-smtp}
    - EMAIL_PORT=${EMAIL_PORT:-25}
    - EMAIL_HOST_USER=${EMAIL_HOST_USER}
    - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
    - EMAIL_USE_TLS=${EMAIL_USE_TLS:-False}
    - EMAIL_USE_SSL=${EMAIL_USE_SSL:-False}
    - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL:-noreply@kartoza.com}

    # PLUGINS
    - PLUGINS=${PLUGINS:-''}
  volumes:
    - static-data:/home/web/static
    - media-data:/home/web/media
  restart: on-failure

services:
  redis:
    image: bitnami/redis:7.0.2
    container_name: "geosight_redis"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis-data:/bitnami/redis/data

  db:
    image: kartoza/postgis:13.0
    container_name: "geosight_db"
    volumes:
      - database:/var/lib/postgresql/13
    ports:
      - "5432:5432"
    environment:
      - ALLOW_IP_RANGE=0.0.0.0/0
      - POSTGRES_DBNAME=${DATABASE_NAME:-django}
      - POSTGRES_USER=${DATABASE_USERNAME:-docker}
      - POSTGRES_PASS=${DATABASE_PASSWORD:-docker}
    restart: on-failure:5

  dbbackups:
    image: kartoza/pg-backup:13.0
    container_name: "geosight_dbbackups"
    environment:
      # take care to let the project name below match that
      # declared in the top of the makefile
      - DUMPPREFIX=PG_GeoSight
      # These are all defaults anyway, but setting explicitly in
      # case we ever want to ever use different credentials
      - POSTGRES_USER=${DATABASE_USERNAME:-docker}
      - POSTGRES_PASS=${DATABASE_PASSWORD:-docker}
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=db
      - POSTGRES_DBNAME=${DATABASE_NAME:-django}
      - DBLIST=django
    volumes:
      - backups-data:/backups
    restart: on-failure:5

  django:
    <<: *default-common-django
    container_name: "geosight_django"
    command: 'uwsgi --ini /uwsgi.conf'
    links:
      - db

  # Celery worker that executes celery tasks created by Django.
  worker:
    <<: *default-common-django
    container_name: "geosight_worker"
    command: 'celery -A core worker -l info'
    entrypoint: [ ]
    links:
      - db
      - redis
      - celery_beat

  celery_beat:
    <<: *default-common-django
    container_name: "geosight_celery_beat"
    entrypoint: [ ]
    command: 'celery -A core beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler'
    links:
      - db
      - redis

  nginx:
    image: kartoza/geosight_nginx:${NGINX_TAG:-0.0.1}
    container_name: "geosight_nginx"
    hostname: nginx
    volumes:
      - static-data:/home/web/static:ro
      - media-data:/home/web/media:ro
    ports:
      - "${HTTP_PORT:-80}:8080"
    restart: on-failure:5
