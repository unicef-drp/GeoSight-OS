# GeoSight is UNICEF's geospatial web-based business intelligence platform.
#
# Contact : geosight-no-reply@unicef.org
#
# .. note:: This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as published by
#    the Free Software Foundation; either version 3 of the License, or
#    (at your option) any later version.
#
# __author__ = 'irwan@kartoza.com'
# __date__ = '13/06/2023'
# __copyright__ = ('Copyright 2023, Unicef')

version: '3.4'
services:
  db:
    volumes:
      - ./volumes/database:/var/lib/postgresql/13
      - ./volumes/backups:/backups
  dbbackups:
    volumes:
      - ./volumes/backups:/backups
  redis:
    volumes:
      # fix redis permission issue because it's using user redis (1001)
      # sudo chown -R 1001:1001 ./volumes/tmp_data/redis
      - ./volumes/tmp_data/redis:/tmp
      - ./redis/redis.conf:/opt/bitnami/redis/mounted-etc/overrides.conf

  django:
    build:
      context: ../
      dockerfile: deployment/docker/Dockerfile
      target: prod
    volumes:
      - ../django_project:/home/web/django_project
      - ./volumes/static:/home/web/static
      - ./volumes/media:/home/web/media
      - ./volumes/backups:/backups
      - ./volumes/tmp_data/django:/tmp
      - ./volumes/tmp_data:/home/web/logs
  worker:
    build:
      context: ../
      dockerfile: deployment/docker/Dockerfile
    volumes:
      - ../django_project:/home/web/django_project
      - ./volumes/static:/home/web/static
      - ./volumes/media:/home/web/media
      - ./volumes/tmp_data/worker:/tmp
  celery_beat:
    build:
      context: ../
      dockerfile: deployment/docker/Dockerfile
    volumes:
      - ../django_project:/home/web/django_project
      - ./volumes/static:/home/web/static
      - ./volumes/media:/home/web/media
      - ./volumes/tmp_data/celery_beat:/tmp
  nginx:
    build:
      context: ../
      dockerfile: deployment/nginx/Dockerfile
    volumes:
      - ./nginx/sites-enabled:/etc/nginx/conf.d
      - ./volumes/static:/home/web/static:ro
      - ./volumes/media:/home/web/media:ro
      - ./volumes/tmp_data/nginx:/tmp
    ports:
      - "${HTTP_PORT:-80}:8080"
      - "${HTTPS_PORT:-443}:443"

  webpack:
    build:
      context: ../
      dockerfile: deployment/docker/Dockerfile
      target: dev
    container_name: "geosight_webpack"
    image: kartoza/geosight:${DJANGO_TAG}-dev
    volumes:
      - ../django_project:/home/web/django_project
      - ./volumes/static:/home/web/static
      - ./volumes/media:/home/web/media
      - ./volumes/backups:/backups
      - ./volumes/tmp_data:/home/web/logs
    working_dir: /home/web/django_project/frontend
    command: sh -c "npm install --verbose && npm run dev"
    entrypoint: []
    ports:
      - "9000:9000"
    healthcheck:
      test: [ "CMD", "curl", "http://localhost:9000" ]
      interval: 5s
      timeout: 2s
      retries: 200
      start_period: 5s

  # dev
  dev:
    build:
      context: ../
      dockerfile: deployment/docker/Dockerfile
      target: dev
    image: kartoza/geosight:${DJANGO_TAG:-0.3.0}-dev
    container_name: "geosight_dev"
    volumes:
      - ../:/home/web/project
      - ../django_project:/home/web/django_project
      - ./volumes/static:/home/web/static
      - ./volumes/media:/home/web/media
      - ./volumes/backups:/backups
      - ./volumes/tmp_data:/home/web/logs
    environment:
      # editable in .env
      - DATABASE_TEMP_NAME=${DATABASE_TEMP_NAME:-temp}
      - DATABASE_NAME=${DATABASE_NAME:-django}
      - DATABASE_USERNAME=${DATABASE_USERNAME:-docker}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-docker}
      - DATABASE_HOST=${DATABASE_HOST:-db}
      - RABBITMQ_HOST=${RABBITMQ_HOST:-rabbitmq}
      - DJANGO_SETTINGS_MODULE=core.settings.dev
      - INITIAL_FIXTURES=${INITIAL_FIXTURES:-True}
      - SECRET_KEY=${SECRET_KEY:-''}

      # Email where alters should be sent. This will be used by let's encrypt and as the django admin email.
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@example.com}

      # Azure configuration
      - AZURE_B2C_CLIENT_ID=${AZURE_B2C_CLIENT_ID:-''}
      - AZURE_B2C_CLIENT_SECRET=${AZURE_B2C_CLIENT_SECRET:-''}
      - AZURE_B2C_TENANT_NAME=${AZURE_B2C_TENANT_NAME:-''}
      - AZURE_B2C_POLICY_NAME=${AZURE_B2C_POLICY_NAME:-''}

      # GeoRepo Azure configuration
      - GEOREPO_AZURE_B2C_CLIENT_ID=${GEOREPO_AZURE_B2C_CLIENT_ID:-''}
      - GEOREPO_AZURE_B2C_CLIENT_SECRET=${GEOREPO_AZURE_B2C_CLIENT_SECRET:-''}
      - GEOREPO_AZURE_B2C_TENANT_NAME=${GEOREPO_AZURE_B2C_TENANT_NAME:-''}
      - GEOREPO_AZURE_B2C_POLICY_NAME=${GEOREPO_AZURE_B2C_POLICY_NAME:-''}

      # PLUGINS
      - PLUGINS=${PLUGINS:-''}
    ports:
      # for django test server
      - "2000:8080"
      # for ssh
      - "2001:22"
    entrypoint: [ "/home/web/django_project/entrypoint.dev.sh" ]
    links:
      - db
      - redis
      - worker
      - webpack
    depends_on:
      webpack:
        condition: service_healthy

  logrotate:
    volumes:
      - ./volumes/tmp_data:/logs
      - ./volumes/tmp_data/logrotate:/tmp
