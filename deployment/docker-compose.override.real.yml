version: '3.4'
services:
  db:
    volumes:
      - ./volumes/database:/var/lib/postgresql/13
      - ./volumes/backups:/backups
  dbbackups:
    volumes:
      - ./volumes/backups:/backups
  django:
    environment:
      - DEMO_FIXTURES=True
    build:
      context: ../
      dockerfile: deployment/docker/Dockerfile
      target: prod
    volumes:
      - ../django_project:/home/web/django_project
      - ./volumes/static:/home/web/static
      - ./volumes/media:/home/web/media
      - ./volumes/backups:/backups
    entrypoint: [ ]
  worker:
    build:
      context: ../
      dockerfile: deployment/docker/Dockerfile
    volumes:
      - ../django_project:/home/web/django_project
      - ./volumes/static:/home/web/static
      - ./volumes/media:/home/web/media
  celery_beat:
    build:
      context: ../
      dockerfile: deployment/docker/Dockerfile
    volumes:
      - ../django_project:/home/web/django_project
      - ./volumes/static:/home/web/static
      - ./volumes/media:/home/web/media
  nginx:
    build:
      context: ../
      dockerfile: deployment/nginx/Dockerfile
    volumes:
      - ./nginx/sites-enabled:/etc/nginx/conf.d
      - ./nginx/CA:/etc/CA
      - ./volumes/static:/home/web/static:ro
      - ./volumes/media:/home/web/media:ro
    ports:
      - "${HTTP_PORT:-80}:8080"

  # dev
  dev: &default-dev-django
    build:
      context: ../
      dockerfile: deployment/docker/Dockerfile
      target: dev
    image: kartoza/geosight:${DJANGO_TAG:-1.0.0}-dev
    container_name: "geosight_dev"
    volumes:
      - ../:/home/web/project
      - ../django_project:/home/web/django_project
      - ./volumes/static:/home/web/static
      - ./volumes/media:/home/web/media
      - ./volumes/backups:/backups
    environment:
      # editable in .env
      - DATABASE_NAME=${DATABASE_NAME:-django}
      - DATABASE_USERNAME=${DATABASE_USERNAME:-docker}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-docker}
      - DATABASE_HOST=${DATABASE_HOST:-db}
      - RABBITMQ_HOST=${RABBITMQ_HOST:-rabbitmq}
      - DJANGO_SETTINGS_MODULE=core.settings.dev
      - INITIAL_FIXTURES=${INITIAL_FIXTURES:-True}
      - SECRET_KEY=${SECRET_KEY:-''}

      # Email where alters should be sent. This will be used by let's encrypt and as the django admin email.
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@example.com}

      # Azure configuration
      - AZURE_B2C_CLIENT_ID=${AZURE_B2C_CLIENT_ID:-''}
      - AZURE_B2C_CLIENT_SECRET=${AZURE_B2C_CLIENT_SECRET:-''}
      - AZURE_B2C_TENANT_NAME=${AZURE_B2C_TENANT_NAME:-''}
      - AZURE_B2C_POLICY_NAME=${AZURE_B2C_POLICY_NAME:-''}

      # GeoRepo Azure configuration
      - GEOREPO_AZURE_B2C_CLIENT_ID=${GEOREPO_AZURE_B2C_CLIENT_ID:-''}
      - GEOREPO_AZURE_B2C_CLIENT_SECRET=${GEOREPO_AZURE_B2C_CLIENT_SECRET:-''}
      - GEOREPO_AZURE_B2C_TENANT_NAME=${GEOREPO_AZURE_B2C_TENANT_NAME:-''}
      - GEOREPO_AZURE_B2C_POLICY_NAME=${GEOREPO_AZURE_B2C_POLICY_NAME:-''}
    ports:
      # for django test server
      - "2000:8080"
      # for ssh
      - "2001:22"
    #    command: 'python manage.py runserver 0.0.0.0:8080'
    entrypoint: [ ]
    links:
      - db
      - redis
      - celery_beat
