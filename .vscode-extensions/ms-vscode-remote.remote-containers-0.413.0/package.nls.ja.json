{"capabilities.untrustedWorkspaces.description":"コンテナー内のフォルダーを開くには、ワークスペースの信頼が必要です。","command.addExtensionToConfig":"devcontainer.json に追加","command.attachToContainerInCurrentWindow":"現在のウィンドウでアタッチする","command.attachToContainerInNewWindow":"新しいウィンドウでアタッチする","command.attachToK8sContainer":"実行中の Kubernetes コンテナーにアタッチ...","command.attachToK8sContainerFromViewlet":"Visual Studio Code をアタッチする","command.attachToRunningContainer":"実行中のコンテナーにアタッチ...","command.attachToRunningContainerFromViewlet":"Visual Studio Codeをアタッチする","command.category":"開発コンテナー","command.checkoutPRInVolume":"Dev コンテナーの Pull 要求 をチェックアウトする","command.cleanUpDevContainers":"開発コンテナーをクリーンアップしています...","command.cloneInVolume":"ボリューム内のリポジトリの複製","command.cloneInVolumeFromViewlet":"既存のボリュームに複製する","command.configureContainerFeatures":"コンテナー機能の構成...","command.createDevContainer":"新しい開発コンテナー...","command.createDevContainerFile":"開発コンテナー構成ファイルを追加...","command.createDevContainerFileWithCopilot":"GitHub Copilot を使用して開発コンテナー構成ファイルを追加...","command.developerCategory":"開発コンテナー開発者","command.explorerDetailsRefresh":"最新の情報に更新","command.explorerTargetsRefresh":"最新の情報に更新","command.explorerVolumesRefresh":"最新の情報に更新","command.getHelp":"ヘルプ","command.getStarted":"Dev Containers を使用して開始する","command.inspectDockerResource":"検査","command.inspectInBasicDevContainer":"開発コンテナーで探索する","command.inspectVolume":"開発コンテナー内のボリュームを調べてください...","command.inspectVolumeFromViewlet":"開発コンテナーで探索する","command.installDocker":"Docker をインストールする","command.installDockerInWSL":"WSL に Docker をインストールする","command.installUserCLI":"devcontainer CLI のインストール","command.labelPortAndUpdateConfig":"ラベルの設定と devcontainer.js の更新","command.newContainer":"新しい開発コンテナー","command.openAttachConfigByNameFile":"名前付きコンテナー構成ファイルを開く","command.openAttachDevContainerFile":"添付コンテナー構成ファイルを開く...","command.openDevContainerFile":"コンテナー構成ファイルを開く","command.openFolder":"コンテナーでフォルダーを開く...","command.openFolderInContainerInCurrentWindow":"現在のウィンドウのコンテナーで開く","command.openFolderInContainerInNewWindow":"新しいウィンドウのコンテナーで開く","command.openInformationAboutMountPerformance":"I/O パフォーマンスを向上させるには、Docker ボリュームにリポジトリを複製します。","command.openLastLogFile":"前のログの表示","command.openLogFile":"すべてのログを表示...","command.openPullRequestInVolume":"コンテナー ボリュームで GitHub Pull 要求 を複製...","command.openRepositoryFromGitWithEditSession":"コンテナー ボリューム内のリポジトリの複製","command.openRepositoryFromRemoteHubWithEditSession":"コンテナー ボリューム内のリポジトリの複製","command.openRepositoryInUniqueVolume":"コンテナー ボリュームにリポジトリを複製...","command.openRepositoryInVolume":"名前付きコンテナー ボリュームにリポジトリを複製...","command.openWorkspace":"コンテナーでワークスペースを開く...","command.provideFeedback":"フィードバックの提供","command.pruneVolumes":"開発ボリュームをクリーンアップしています...","command.rebuildAndReopenInContainer":"コンテナーでリビルドして再度開く","command.rebuildContainer":"コンテナーのリビルド","command.rebuildContainerNoCache":"キャッシュなしのコンテナーのリビルド","command.rebuildNoCacheAndReopenInContainer":"キャッシュなしでリビルドし、コンテナーで再度開く","command.removeContainer":"コンテナーの削除","command.removeRecentFolder":"最近使用したフォルダーの削除","command.removeVolume":"削除","command.reopenInContainer":"コンテナーで再度開く","command.reopenInSSH":"SSH でフォルダーをもう一度開く","command.reopenInTunnel":"トンネル内のフォルダーを再度開く","command.reopenInWSL":"WSL でフォルダーをもう一度開く...","command.reopenLocally":"フォルダーをローカルで再度開く","command.reportIssue":"問題を英語で報告...","command.revealLogTerminal":"コンテナー ログの表示","command.settings":"設定","command.showContainerLog":"コンテナー ログの表示","command.showDetails":"詳細の表示","command.showRecoveryContainerNotificationReset":"回復コンテナーの通知が表示されないをリセット","command.showReopenInContainerNotificationReset":"リセットで再び開く通知が表示されない","command.startContainer":"コンテナーの開始","command.stopContainer":"コンテナーの停止","command.switchContainer":"コンテナーの切り替え","command.testConnection":"テスト接続","command.trySample":"開発コンテナーサンプルを試す...","configuration.cacheVolume.deprecationMessage":"代わりに 'dev.containers.cacheVolume' を使用してください。","configuration.cacheVolume.description":"VS Code サーバーと拡張機能をキャッシュするために Docker ボリュームを使用するかどうかを制御します。","configuration.cacheVolume.markdownDeprecationMessage":"代わりに '#dev.containers.cacheVolume#' を使用してください。","configuration.copyGitConfig.deprecationMessage":"代わりに 'dev.containers.copyGitConfig' を使用してください。","configuration.copyGitConfig.markdownDeprecationMessage":"代わりに '#dev.containers.copyGitConfig#' を使用してください。","configuration.copyGitConfig.markdownDescription":"Git 構成 ('~/.gitconfig') をコンテナーにコピーするかどうかを制御します。これは、'#dotfiles.repository#' をインストールした後に行われ、既存の Git 構成ファイルは上書きされません。","configuration.defaultExtensions.deprecationMessage":"代わりに 'dev.containers.defaultExtensions' を使用してください。","configuration.defaultExtensions.description":"コンテナーの作成時に常にインストールするように拡張機能の一覧を構成します。","configuration.defaultExtensions.errorMessage":"予期される形式 '${publisher}.${name}'。例: 'vscode.csharp'。","configuration.defaultExtensions.markdownDeprecationMessage":"代わりに '#dev.containers.defaultExtensions#' を使用してください。","configuration.defaultFeatures":"コンテナーの作成時に常にインストールする機能の一覧を構成します。","configuration.dockerComposePath.deprecationMessage":"代わりに 'dev.containers.dockerComposePath' を使用してください。","configuration.dockerComposePath.description":"Docker Compose の実行可能ファイルの名前またはパス。","configuration.dockerComposePath.markdownDeprecationMessage":"代わりに '#dev.containers.dockerComposePath#' を使用してください。","configuration.dockerCredentialHelper.markdownDescription":"開発コンテナーの Docker 構成 ('~/.docker/config.json') で資格情報ヘルパーを 'credStore' として登録するかどうかを制御します。これにより、構成ファイル内の既存の 'credStore' エントリは上書きされません。","configuration.dockerPath.deprecationMessage":"代わりに 'dev.containers.dockerPath' を使用してください。","configuration.dockerPath.description":"Docker (または Podman) 実行可能ファイルの名前またはパス。","configuration.dockerPath.markdownDeprecationMessage":"代わりに '#dev.containers.dockerPath#' を使用してください。","configuration.dockerSocketPath.description":"Docker ソケット パス。たとえば、Docker ボリューム内の devcontainer.json を使用して開発コンテナーに接続する場合などに使用されます。","configuration.dotfiles.installCommand.deprecationMessage":"代わりに 'dotfiles.installCommand' を使用してください。","configuration.dotfiles.installCommand.description":"dotfiles リポジトリを複製した後に実行するコマンド。既定では、dotfiles リポジトリのルート フォルダーにある 'install.sh'、'install'、'bootstrap.sh'、'bootstrap'、'setup.sh'、'setup' の最初のファイルが実行されます。","configuration.dotfiles.installCommand.markdownDeprecationMessage":"代わりに '#dotfiles.installCommand#' を使用してください。","configuration.dotfiles.repository.deprecationMessage":"代わりに 'dotfiles.repository' を使用してください。","configuration.dotfiles.repository.description":"dotfiles Git リポジトリ (https://github.com/owner/repository.git など) または GitHub リポジトリの所有者/リポジトリの URL。","configuration.dotfiles.repository.markdownDeprecationMessage":"代わりに '#dotfiles.repository#' を使用してください。","configuration.dotfiles.targetPath.deprecationMessage":"代わりに 'dotfiles.targetPath' を使用してください。","configuration.dotfiles.targetPath.description":"dotfiles リポジトリを複製するパス。既定値は '~/dotfiles' です。","configuration.dotfiles.targetPath.markdownDeprecationMessage":"代わりに '#dotfiles.targetPath#' を使用してください。","configuration.executeInWSL.deprecationMessage":"代わりに 'dev.containers.executeInWSL' を使用してください。","configuration.executeInWSL.description":"CLI コマンドを WSL で常に実行するかどうかを制御します。既定値は、WSL 内のワークスペース フォルダーの WSL でのみ実行されます。この設定は、Windows 以外のプラットフォームには影響しません。","configuration.executeInWSL.markdownDeprecationMessage":"代わりに '#dev.containers.executeInWSL#' を使用してください。","configuration.executeInWSLDistro.deprecationMessage":"代わりに 'dev.containers.executeInWSLDistro' を使用してください。","configuration.executeInWSLDistro.markdownDeprecationMessage":"代わりに '#dev.containers.executeInWSLDistro#' を使用してください。","configuration.executeInWSLDistro.markdownDescription":"WSL フォルダーを再度開かないときに使用する WSL ディストリビューション。既定では、既定の WSL ディストリビューションを使用します (`wsl -l`を参照)。この設定は、'#dev.containers.executeInWSL#' が有効になっていない場合、または Windows 以外の他のプラットフォームで有効になっている場合は効果がありません。","configuration.experimentalLockfile.description":"試験段階の devcontainer-lock.json を書き込むかどうかを制御します。この機能は試験段階であり、今後変更される可能性があります。","configuration.forwardWSLServices.description":"WSL のサービス (SSH エージェント、GPG エージェント、X ディスプレイ、Wayland ディスプレイ) がコンテナーに転送されるかどうかを制御します。この設定は、Windows 以外のプラットフォームに影響しません。","configuration.gitCredentialHelperConfigLocation.deprecationMessage":"代わりに 'dev.containers.gitCredentialHelperConfigLocation' を使用してください。","configuration.gitCredentialHelperConfigLocation.description":"Git 資格情報ヘルパーの構成を記述する場所。","configuration.gitCredentialHelperConfigLocation.global":"ユーザー構成 ('~/.gitconfig') に書き込みます。","configuration.gitCredentialHelperConfigLocation.markdownDeprecationMessage":"代わりに '#dev.containers.gitCredentialHelperConfigLocation#' を使用してください。","configuration.gitCredentialHelperConfigLocation.none":"資格情報ヘルパーを設定しないでください。","configuration.gitCredentialHelperConfigLocation.system":"システム構成に書き込みます ('/etc/gitconfig'、ルート アクセスが必要です)。","configuration.gpuAvailability.all":"すべての GPU を使用できます。これは、ホストに GPU があることを想定しています。","configuration.gpuAvailability.description":"開発コンテナーに GPU が必要な場合の GPU の可用性。","configuration.gpuAvailability.detect":"可用性は自動的に検出される必要があります。","configuration.gpuAvailability.none":"使用可能な GPU はありません。","configuration.logLevel.deprecationMessage":"代わりに 'dev.containers.logLevel' を使用してください。","configuration.logLevel.description":"拡張機能のログ レベル。","configuration.logLevel.markdownDeprecationMessage":"代わりに '#dev.containers.logLevel#' を使用してください。","configuration.mountWaylandSocket.markdownDescription":"Wayland ソケット、存在する場合、それを開発コンテナーにマウントするかどうかを制御します。","configuration.optimisticallyLaunchDocker.description":"デーモンがまだ起動されていない場合は、Docker の起動を楽観的に試みます。","configuration.repositoryConfigurationPaths.deprecationMessage":"代わりに 'dev.containers.repositoryConfigurationPaths' を使用してください。","configuration.repositoryConfigurationPaths.markdownDeprecationMessage":"代わりに '#dev.containers.repositoryConfigurationPaths#' を使用してください。","configuration.repositoryConfigurationPaths.markdownDescription":"[リポジトリ構成](https://code.visualstudio.com/docs/devcontainers/create-dev-container#_alternative-repository-configuration-folders) を検索するための追加パスのリスト。","configuration.title":"開発コンテナー","configuration.workspaceMountConsistency.cached":"ホストのビューは権限があります。","configuration.workspaceMountConsistency.consistent":"完全な一貫性。","configuration.workspaceMountConsistency.delegated":"コンテナーのビューは権限があります。","configuration.workspaceMountConsistency.deprecationMessage":"代わりに 'dev.containers.workspaceMountConsistency' を使用してください。","configuration.workspaceMountConsistency.description":"ワークスペースマウントに使用される整合性レベル (有効にするには、既存のコンテナーを再構築する必要があります)。","configuration.workspaceMountConsistency.markdownDeprecationMessage":"代わりに '#dev.containers.workspaceMountConsistency#' を使用してください。","continueEditSession.containerVolume":"コンテナー ボリュームでの作業の続行","description":"Docker コンテナー内の任意のフォルダーまたはリポジトリを開き、Visual Studio Code の完全な機能セットを利用します。","displayName":"開発コンテナー","resourceLabelFormatters.attached-container.workspaceSuffix":"コンテナー","resourceLabelFormatters.dev-container.workspaceSuffix":"開発コンテナー","resourceLabelFormatters.exec.workspaceSuffix":"Exec","resourceLabelFormatters.k8s-container.workspaceSuffix":"Kubernetes","views.remote.detailsContainers":"詳細 (コンテナー)","views.remote.devVolumes":"開発ボリューム","views.remote.targetsContainers":"開発コンテナー","viewsWelcome.devVolumes.noDevVolumes":"使用するリポジトリがある場合は、それをコンテナー ボリュームに直接複製できます。\n[コンテナー ボリューム内のリポジトリの複製](command:remote-containers.openRepositoryInUniqueVolume)\n","viewsWelcome.targetsContainers.needsDockerStartOrInstall":"コンテナーの使用を開始するには、[Docker のインストール](command:remote-containers.installDocker) または [ヘルプ ビュー](command:~remote.helpPanel.focus) にアクセスします。インストールと起動後に[更新](command:remote-containers.explorerTargetsRefresh)。","viewsWelcome.targetsContainers.needsSSHCredentials":"SSH 資格情報を提供する [更新](command:remote-containers.explorerTargetsRefresh) 。","viewsWelcome.targetsContainers.noContainersWithFolder":"[Dev Containers](command:remote-containers.newContainer) コマンドのいずれかを実行して、コンテナーの使用を開始します。\n[コンテナー内の現在のフォルダーを再度開く](command:remote-containers.reopenInContainer)、またはコンテナー内の別のフォルダーを開くことができます。\n[コンテナー内のフォルダーを開く](command:remote-containers.openFolder)\nコンテナーを初めて使用していて、[サンプルを試す](command:remote-containers.trySample)、いくつかの選択肢があります。","viewsWelcome.targetsContainers.noContainersWithoutFolder":"[Dev Containers](command:remote-containers.newContainer) コマンドのいずれかを実行して、コンテナーの使用を開始します。\nコンテナー内の既存のフォルダーを開くことができます。\n[コンテナー内のフォルダーを開く]](command:remote-containers.openFolder)\nコンテナーを初めて使用していて、[サンプルを試す](command:remote-containers.trySample)、いくつかの選択肢があります。"}
