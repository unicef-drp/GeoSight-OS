{"capabilities.untrustedWorkspaces.description":"開啟容器中的資料夾需要工作區信任。","command.addExtensionToConfig":"新增至 devcontainer.json","command.attachToContainerInCurrentWindow":"在目前的視窗中附加","command.attachToContainerInNewWindow":"在新視窗中連結","command.attachToK8sContainer":"連結至執行中的 Kubernetes 容器...","command.attachToK8sContainerFromViewlet":"連結 Visual Studio Code","command.attachToRunningContainer":"連結至正在執行的容器...","command.attachToRunningContainerFromViewlet":"連結 Visual Studio Code","command.category":"開發人員容器","command.checkoutPRInVolume":"在開發人員容器中簽出提取要求","command.cleanUpDevContainers":"正在清理開發人員容器...","command.cloneInVolume":"在磁碟區中複製存放庫","command.cloneInVolumeFromViewlet":"複製至現有的磁碟區","command.configureContainerFeatures":"設定容器功能...","command.createDevContainer":"新增開發人員容器...","command.createDevContainerFile":"新增開發人員容器設定檔...","command.createDevContainerFileWithCopilot":"使用 GitHub Copilot 新增開發容器設定檔...","command.developerCategory":"開發容器開發人員","command.explorerDetailsRefresh":"重新整理","command.explorerTargetsRefresh":"重新整理","command.explorerVolumesRefresh":"重新整理","command.getHelp":"說明","command.getStarted":"開始使用開發人員容器","command.inspectDockerResource":"檢查","command.inspectInBasicDevContainer":"在開發人員容器中探索","command.inspectVolume":"探索開發人員容器中的磁碟區...","command.inspectVolumeFromViewlet":"在開發人員容器中探索","command.installDocker":"安裝 Docker","command.installDockerInWSL":"在 WSL 中安裝 Docker","command.installUserCLI":"安裝 devcontainer CLI","command.labelPortAndUpdateConfig":"設定標籤並更新 devcontainer.json","command.newContainer":"新增開發人員容器","command.openAttachConfigByNameFile":"開啟具名容器設定檔","command.openAttachDevContainerFile":"開啟附加的容器設定檔...","command.openDevContainerFile":"開啟容器設定檔","command.openFolder":"在容器中開啟資料夾...","command.openFolderInContainerInCurrentWindow":"在目前視窗的容器中開啟","command.openFolderInContainerInNewWindow":"在新視窗的容器中開啟","command.openInformationAboutMountPerformance":"在 Docker 磁碟區中複製存放庫，以提升 I/O 的效能。","command.openLastLogFile":"顯示上一個記錄","command.openLogFile":"顯示所有記錄...","command.openPullRequestInVolume":"複製容器磁碟區中的 GitHub 提取要求...","command.openRepositoryFromGitWithEditSession":"在容器磁碟區中複製存放庫","command.openRepositoryFromRemoteHubWithEditSession":"在容器磁碟區中複製存放庫","command.openRepositoryInUniqueVolume":"在容器磁碟區中複製存放庫...","command.openRepositoryInVolume":"在具名容器磁碟區中複製存放庫...","command.openWorkspace":"在容器中開啟工作區...","command.provideFeedback":"提供意見反應","command.pruneVolumes":"正在清理開發磁碟區...","command.rebuildAndReopenInContainer":"在容器中重建和重新開啟","command.rebuildContainer":"重建容器","command.rebuildContainerNoCache":"重建沒有快取的容器","command.rebuildNoCacheAndReopenInContainer":"在容器中重建而不使用快取，然後重新開啟","command.removeContainer":"移除容器","command.removeRecentFolder":"移除最近使用的資料夾","command.removeVolume":"移除","command.reopenInContainer":"在容器中重新開啟","command.reopenInSSH":"在 SSH 中重新開啟資料夾","command.reopenInTunnel":"在 Tunnel 中重新開啟資料夾","command.reopenInWSL":"在 WSL 中重新開啟資料夾","command.reopenLocally":"在區域重新開啟資料夾","command.reportIssue":"回報問題...","command.revealLogTerminal":"顯示容器記錄","command.settings":"設定","command.showContainerLog":"顯示容器記錄","command.showDetails":"顯示詳細資料","command.showRecoveryContainerNotificationReset":"重設不要顯示復原容器通知","command.showReopenInContainerNotificationReset":"重設不要顯示重新開啟通知","command.startContainer":"啟動容器","command.stopContainer":"停止容器","command.switchContainer":"交換器容器","command.testConnection":"測試連接","command.trySample":"嘗試開發人員容器範例...","configuration.cacheVolume.deprecationMessage":"請改為使用 'dev.containers.cacheVolume'。","configuration.cacheVolume.description":"控制是否應使用 Docker 磁碟區來快取VS Code伺服器和擴充功能。","configuration.cacheVolume.markdownDeprecationMessage":"請改為使用 `#dev.containers.cacheVolume#`。","configuration.copyGitConfig.deprecationMessage":"請改為使用 'dev.containers.copyGitConfig'。","configuration.copyGitConfig.markdownDeprecationMessage":"請改為使用 `#dev.containers.copyGitConfig#`。","configuration.copyGitConfig.markdownDescription":"控制 Git 設定 (`~/.gitconfig`) 是否應該複製到容器中。這是在安裝任何 `#dotfiles.repository#` 之後完成，而且不會覆寫現有的 Git 設定檔。","configuration.defaultExtensions.deprecationMessage":"請改為使用 'dev.containers.defaultExtensions'。","configuration.defaultExtensions.description":"設定在建立容器時一律安裝的延伸模組清單。","configuration.defaultExtensions.errorMessage":"格式應為 '${publisher}.${name}'。範例: 'vscode.csharp'。","configuration.defaultExtensions.markdownDeprecationMessage":"請改為使用 `#dev.containers.defaultExtensions#`。","configuration.defaultFeatures":"設定在建立容器時一律安裝的功能清單。","configuration.dockerComposePath.deprecationMessage":"請改為使用 'dev.containers.dockerComposePath'。","configuration.dockerComposePath.description":"Docker Compose 可執行檔名稱或路徑。","configuration.dockerComposePath.markdownDeprecationMessage":"請改為使用 `#dev.containers.dockerComposePath#`。","configuration.dockerCredentialHelper.markdownDescription":"控制認證協助程式是否應該在開發人員容器的 Docker 設定 (`~/.docker/config.json`) 中註冊為 `credStore`。這不會覆寫設定檔中現有的 `credStore` 項目。","configuration.dockerPath.deprecationMessage":"請改為使用 'dev.containers.dockerPath'。","configuration.dockerPath.description":"Docker (或 Podman) 可執行檔名稱或路徑。","configuration.dockerPath.markdownDeprecationMessage":"請改為使用 `#dev.containers.dockerPath#`。","configuration.dockerSocketPath.description":"Docker 通訊端路徑。已使用 (例如在 Docker 磁碟區中連接到具有 devcontainer.json 的「開發人員容器」時)。","configuration.dotfiles.installCommand.deprecationMessage":"請改為使用 'dotfiles.installCommand'。","configuration.dotfiles.installCommand.description":"複製點號檔存放庫之後要執行的命令。預設會執行點號檔存放庫根資料夾中找到的第一個檔案 'install.sh'、'install'、'bootstrap.sh'、'bootstrap'、'setup.sh' 和 'setup'。","configuration.dotfiles.installCommand.markdownDeprecationMessage":"請改為使用 `#dotfiles.installCommand#`。","configuration.dotfiles.repository.deprecationMessage":"請改為使用 'dotfiles.repository'。","configuration.dotfiles.repository.description":"Git 存放庫 (例如，https://github.com/owner/repository.git) 或 GitHub 存放庫擁有者/存放庫的 URL。","configuration.dotfiles.repository.markdownDeprecationMessage":"請改為使用 `#dotfiles.repository#。","configuration.dotfiles.targetPath.deprecationMessage":"請改為使用 'dotfiles.targetPath'。","configuration.dotfiles.targetPath.description":"複製點號檔存放庫的路徑。預設值為 `~/dotfiles`。","configuration.dotfiles.targetPath.markdownDeprecationMessage":"請改為使用 `#dotfiles.targetPath#`。","configuration.executeInWSL.deprecationMessage":"請改為使用 'dev.containers.executeInWSL'。","configuration.executeInWSL.description":"控制是否應該一律在 WSL 中執行 CLI 命令。預設只會在 WSL 中工作區資料夾的 WSL 中執行。此設定在 Windows 以外的其他平台上沒有影響。","configuration.executeInWSL.markdownDeprecationMessage":"請改為使用 `#dev.containers.executeInWSL#`。","configuration.executeInWSLDistro.deprecationMessage":"請改為使用 'dev.containers.executeInWSLDistro'。","configuration.executeInWSLDistro.markdownDeprecationMessage":"請改為使用 `#dev.containers.executeInWSLDistro#`。","configuration.executeInWSLDistro.markdownDescription":"未重新開啟 WSL 資料夾時使用的 WSL Distro。預設值是使用預設的 WSL distro (請參閱 `wsl -l`)。未啟用 `#dev.containers.executeInWSL#` 或在 Windows 以外的其他平台上時，此設定沒有作用。","configuration.experimentalLockfile.description":"控制是否應該寫入實驗性的 devcontainer-lock.json。此功能是實驗性功能，未來可能會變更。","configuration.forwardWSLServices.description":"控制 WSL 中的服務 (SSH 代理程式、GPG 代理程式、X 顯示、Wayland 顯示) 是否轉寄至容器中。此設定對 Windows 以外的其他平台沒有影響。","configuration.gitCredentialHelperConfigLocation.deprecationMessage":"請改為使用 'dev.containers.gitCredentialHelperConfigLocation'。","configuration.gitCredentialHelperConfigLocation.description":"在何處寫入 Git 認證協助程式的設定。","configuration.gitCredentialHelperConfigLocation.global":"寫入使用者設定 (`~/.gitconfig`)。","configuration.gitCredentialHelperConfigLocation.markdownDeprecationMessage":"請改為使用 `#dev.containers.gitCredentialHelperConfigLocation#`。","configuration.gitCredentialHelperConfigLocation.none":"請勿設定認證協助程式。","configuration.gitCredentialHelperConfigLocation.system":"寫入系統設定組態 (`/etc/gitconfig`，需要 root 存取)。","configuration.gpuAvailability.all":"所有 GPU 都可用。這需要主機具有 GPU。","configuration.gpuAvailability.description":"當開發容器需要任何 GPU 時，GPU 的可用性。","configuration.gpuAvailability.detect":"應自動偵測可用性。","configuration.gpuAvailability.none":"沒有可用的 GPU。","configuration.logLevel.deprecationMessage":"請改為使用 'dev.containers.logLevel'。","configuration.logLevel.description":"延伸模組的記錄層級。","configuration.logLevel.markdownDeprecationMessage":"請改為使用 `#dev.containers.logLevel#`。","configuration.mountWaylandSocket.markdownDescription":"控制 Wayland 通訊端 (如果有) 是否應該掛接到開發人員容器。","configuration.optimisticallyLaunchDocker.description":"如果精靈尚未執行，則樂觀地嘗試啟動 Docker。","configuration.repositoryConfigurationPaths.deprecationMessage":"請改為使用 'dev.containers.repositoryConfigurationPaths'。","configuration.repositoryConfigurationPaths.markdownDeprecationMessage":"請改為使用 `#dev.containers.repositoryConfigurationPaths#`。","configuration.repositoryConfigurationPaths.markdownDescription":"要搜尋 [存放庫設定](https://code.visualstudio.com/docs/devcontainers/create-dev-container#_alternative-repository-configuration-folders) 的其他路徑清單。","configuration.title":"開發人員容器","configuration.workspaceMountConsistency.cached":"主機的檢視具有權限。","configuration.workspaceMountConsistency.consistent":"完美一致性。","configuration.workspaceMountConsistency.delegated":"容器的檢視具有權限。","configuration.workspaceMountConsistency.deprecationMessage":"請改為使用 'dev.containers.workspaceMountConsistency'。","configuration.workspaceMountConsistency.description":"工作區掛接所使用的一致性層級 (必須重建現有的容器，以生效)。","configuration.workspaceMountConsistency.markdownDeprecationMessage":"請改為使用 `#dev.containers.workspaceMountConsistency#`。","continueEditSession.containerVolume":"繼續在容器磁碟區中工作","description":"開啟 Docker 容器內的任何資料夾或存放庫，並充分利用 Visual Studio Code 的完整功能集。","displayName":"開發人員容器","resourceLabelFormatters.attached-container.workspaceSuffix":"容器","resourceLabelFormatters.dev-container.workspaceSuffix":"開發容器","resourceLabelFormatters.exec.workspaceSuffix":"Exec","resourceLabelFormatters.k8s-container.workspaceSuffix":"Kubernetes","views.remote.detailsContainers":"詳細資料 (容器)","views.remote.devVolumes":"開發磁碟區","views.remote.targetsContainers":"開發人員容器","viewsWelcome.devVolumes.noDevVolumes":"如果您想要使用存放庫，您可以直接在容器磁碟區中複製該存放庫。 \n[在容器磁碟區中複製存放庫](command:remote-containers.openRepositoryInUniqueVolume)\n","viewsWelcome.targetsContainers.needsDockerStartOrInstall":"從 [安裝 Docker](command:remote-containers.installDocker) 或瀏覽 [說明檢視](command:~remote.helpPanel.focus) 開始使用容器。在安裝和啟動之後 [重新整理](command:remote-containers.explorerTargetsRefresh)。","viewsWelcome.targetsContainers.needsSSHCredentials":"[重新整理](command:remote-containers.explorerTargetsRefresh) 以提供 SSH 認證。","viewsWelcome.targetsContainers.noContainersWithFolder":"執行其中一個 [開發容器](command:remote-containers.newContainer) 命令，開始使用容器。 \n您可以 [重新開啟容器中的目前資料夾](command:remote-containers.reopenInContainer)，或開啟容器中的另一個資料夾。 \n[開啟容器中的資料夾](command:remote-containers.openFolder) \n如果您第一次使用容器，並想要 [試用範例](command:remote-containers.trySample)，有幾個選項可供選擇。","viewsWelcome.targetsContainers.noContainersWithoutFolder":"執行其中一個 [開發容器](command:remote-containers.newContainer) 命令，開始使用容器。 \n您可以在容器中開啟現有的資料夾。\n[開啟容器中的資料夾](command:remote-containers.openFolder) \n如果您第一次使用容器，並想要 [試用範例](command:remote-containers.trySample)，有幾個選項可供選擇。"}
