{"capabilities.untrustedWorkspaces.description":"Das Öffnen eines Ordners in einem Container erfordert WS-Trust.","command.addExtensionToConfig":"Zu „devcontainer.json“ hinzufügen","command.attachToContainerInCurrentWindow":"Im aktuellen Fenster anfügen","command.attachToContainerInNewWindow":"In neuem Fenster anfügen","command.attachToK8sContainer":"An ausgeführten Kubernetes-Container anfügen...","command.attachToK8sContainerFromViewlet":"Visual Studio Code anfügen","command.attachToRunningContainer":"An ausgeführten Container anfügen…","command.attachToRunningContainerFromViewlet":"Visual Studio Code anfügen","command.category":"Entwicklungscontainer","command.checkoutPRInVolume":"Pull Request im Entwicklercontainer auschecken","command.cleanUpDevContainers":"Entwicklungscontainer bereinigen…","command.cloneInVolume":"Repository in Volume klonen","command.cloneInVolumeFromViewlet":"In vorhandenes Volume klonen","command.configureContainerFeatures":"Containerfeatures konfigurieren…","command.createDevContainer":"Neuer Entwicklungscontainer…","command.createDevContainerFile":"Konfigurationsdateien für Entwicklungscontainer hinzufügen…","command.createDevContainerFileWithCopilot":"Dev-Container-Konfigurationsdateien mithilfe von GitHub Copilot hinzufügen...","command.developerCategory":"Entwickler von Entwicklercontainern","command.explorerDetailsRefresh":"Aktualisieren","command.explorerTargetsRefresh":"Aktualisieren","command.explorerVolumesRefresh":"Aktualisieren","command.getHelp":"Hilfe","command.getStarted":"Erste Schritte mit Entwicklercontainern","command.inspectDockerResource":"Überprüfen","command.inspectInBasicDevContainer":"Im Entwicklungscontainer erkunden","command.inspectVolume":"Ein Volume in einem Entwicklungscontainer erkunden…","command.inspectVolumeFromViewlet":"In einem Entwicklungscontainer erkunden","command.installDocker":"Docker installieren","command.installDockerInWSL":"Docker in WSL installieren","command.installUserCLI":"Entwicklungscontainer-CLI installieren","command.labelPortAndUpdateConfig":"Bezeichnung festlegen und „devcontainer.json“ aktualisieren","command.newContainer":"Neuer Entwicklungscontainer","command.openAttachConfigByNameFile":"Konfigurationsdatei für benannten Container öffnen","command.openAttachDevContainerFile":"Angefügte Containerkonfigurationsdatei öffnen…","command.openDevContainerFile":"Öffnen der Containerkonfigurationsdatei","command.openFolder":"Ordner im Container öffnen…","command.openFolderInContainerInCurrentWindow":"In Container im aktuellen Fenster öffnen","command.openFolderInContainerInNewWindow":"In Container im neuen Fenster öffnen","command.openInformationAboutMountPerformance":"Klonen Sie das Repository im Docker-Volume, um die E/A-Leistung zu verbessern.","command.openLastLogFile":"Letztes Protokoll anzeigen","command.openLogFile":"Alle Protokolle anzeigen…","command.openPullRequestInVolume":"GitHub-Pull Request in Containervolume klonen…","command.openRepositoryFromGitWithEditSession":"Repository in Containervolume klonen","command.openRepositoryFromRemoteHubWithEditSession":"Repository in Containervolume klonen","command.openRepositoryInUniqueVolume":"Repository in Containervolume klonen…","command.openRepositoryInVolume":"Repository in benannte Containervolume klonen…","command.openWorkspace":"Arbeitsbereich in Container öffnen…","command.provideFeedback":"Feedback bereitstellen","command.pruneVolumes":"Entwicklungsvolumes werden bereinigt…","command.rebuildAndReopenInContainer":"Im Container neu erstellen und erneut öffnen","command.rebuildContainer":"Container neu erstellen","command.rebuildContainerNoCache":"Container ohne Cache neu erstellen","command.rebuildNoCacheAndReopenInContainer":"Ohne Cache neu erstellen und im Container erneut öffnen","command.removeContainer":"Container entfernen","command.removeRecentFolder":"Zuletzt verwendeten Ordner entfernen","command.removeVolume":"Entfernen","command.reopenInContainer":"Im Container erneut öffnen","command.reopenInSSH":"Ordner in SSH erneut öffnen","command.reopenInTunnel":"Ordner im Tunnel erneut öffnen","command.reopenInWSL":"Ordner in WSL erneut öffnen","command.reopenLocally":"Ordner lokal erneut öffnen","command.reportIssue":"Problem melden...","command.revealLogTerminal":"Containerprotokoll anzeigen","command.settings":"Einstellungen","command.showContainerLog":"Containerprotokoll anzeigen","command.showDetails":"Details anzeigen","command.showRecoveryContainerNotificationReset":"Zurücksetzen: Benachrichtigung zum Wiederherstellungscontainer nicht anzeigen","command.showReopenInContainerNotificationReset":"Zurücksetzen: Benachrichtigung zum Erneuten Öffnen nicht anzeigen","command.startContainer":"Container starten","command.stopContainer":"Container beenden","command.switchContainer":"Container wechseln","command.testConnection":"Verbindung testen","command.trySample":"Testen Sie ein Entwicklungscontainer-Beispiel…","configuration.cacheVolume.deprecationMessage":"Verwenden Sie stattdessen 'dev.containers.cacheVolume'.","configuration.cacheVolume.description":"Steuert, ob ein Docker-Volume zum Zwischenspeichern des VS Code Servers und der Erweiterungen verwendet werden soll.","configuration.cacheVolume.markdownDeprecationMessage":"Verwenden Sie stattdessen `#dev.containers.cacheVolume#`.","configuration.copyGitConfig.deprecationMessage":"Verwenden Sie stattdessen 'dev.containers.copyGitConfig'.","configuration.copyGitConfig.markdownDeprecationMessage":"Verwenden Sie stattdessen `#dev.containers.copyGitConfig#`.","configuration.copyGitConfig.markdownDescription":"Steuert, ob die Git-Konfiguration (`~/.gitconfig`) in den Container kopiert werden soll. Dies erfolgt nach der Installation jedes `#dotfiles.repository#` und überschreibt keine vorhandene Git-Konfigurationsdatei.","configuration.defaultExtensions.deprecationMessage":"Verwenden Sie stattdessen 'dev.containers.defaultExtensions'.","configuration.defaultExtensions.description":"Konfiguriert die Liste der Erweiterungen, die beim Erstellen eines Containers immer installiert werden sollen.","configuration.defaultExtensions.errorMessage":"Erwartetes Format: \"${publisher}.${name}\". Beispiel: \"vscode.csharp\".","configuration.defaultExtensions.markdownDeprecationMessage":"Verwenden Sie stattdessen `#dev.containers.defaultExtensions#`.","configuration.defaultFeatures":"Konfiguriert die Liste der Features, die beim Erstellen eines Containers immer installiert werden sollen.","configuration.dockerComposePath.deprecationMessage":"Verwenden Sie stattdessen 'dev.containers.dockerComposePath'.","configuration.dockerComposePath.description":"Namen oder Pfad der ausführbaren Docker Compose Datei.","configuration.dockerComposePath.markdownDeprecationMessage":"Verwenden Sie stattdessen `#dev.containers.dockerComposePath#`.","configuration.dockerCredentialHelper.markdownDescription":"Steuert, ob ein Anmeldeinformationen-Hilfsprogramm in der Docker-Konfiguration (`~/.docker/config.json`) von Entwicklungscontainern als `credStore` registriert werden soll. Dies überschreibt keinen vorhandenen `credStore`-Eintrag in der Konfigurationsdatei.","configuration.dockerPath.deprecationMessage":"Verwenden Sie stattdessen 'dev.containers.dockerPath'.","configuration.dockerPath.description":"Name oder Pfad der ausführbaren Docker- (oder Podman-) Datei.","configuration.dockerPath.markdownDeprecationMessage":"Verwenden Sie stattdessen `#dev.containers.dockerPath#`.","configuration.dockerSocketPath.description":"Docker-Socketpfad. Wird beispielsweise beim Herstellen einer Verbindung mit einem Dev Container mit dem devcontainer.json in einem Docker-Volume verwendet.","configuration.dotfiles.installCommand.deprecationMessage":"Verwenden Sie stattdessen 'dotfiles.installCommand'.","configuration.dotfiles.installCommand.description":"Der Befehl, der nach dem Klonen des dotfiles-Repositorys ausgeführt werden soll. Standardmäßig wird die erste Datei von `install.sh`, `install`, `bootstrap.sh`, `bootstrap`, `setup.sh` und `setup` im Stammordner des dotfiles-Repositorys ausgeführt.","configuration.dotfiles.installCommand.markdownDeprecationMessage":"Verwenden Sie stattdessen `#dotfiles.installCommand#`.","configuration.dotfiles.repository.deprecationMessage":"Verwenden Sie stattdessen 'dotfiles.repository'.","configuration.dotfiles.repository.description":"URL eines dotfiles-Git-Repositorys (z. B. https://github.com/owner/repository.git) oder Besitzer/Repository eines GitHub-Repositorys.","configuration.dotfiles.repository.markdownDeprecationMessage":"Verwenden Sie stattdessen `#dotfiles.repository#`.","configuration.dotfiles.targetPath.deprecationMessage":"Verwenden Sie stattdessen 'dotfiles.targetPath'.","configuration.dotfiles.targetPath.description":"Der Pfad, in den das dotfiles-Repository geklont werden soll. Der Standardwert ist `~/dotfiles`.","configuration.dotfiles.targetPath.markdownDeprecationMessage":"Verwenden Sie stattdessen `#dotfiles.targetPath#`.","configuration.executeInWSL.deprecationMessage":"Verwenden Sie stattdessen 'dev.containers.executeInWSL'.","configuration.executeInWSL.description":"Steuert, ob CLI-Befehle immer in WSL ausgeführt werden sollen. Standardmäßig werden Befehle in WSL nur für Arbeitsbereichsordner in WSL ausgeführt. Diese Einstellung hat keine Auswirkungen auf anderen Plattformen als Windows.","configuration.executeInWSL.markdownDeprecationMessage":"Verwenden Sie stattdessen `#dev.containers.executeInWSL#`.","configuration.executeInWSLDistro.deprecationMessage":"Verwenden Sie stattdessen 'dev.containers.executeInWSLDistro'.","configuration.executeInWSLDistro.markdownDeprecationMessage":"Verwenden Sie stattdessen `#dev.containers.executeInWSLDistro#`.","configuration.executeInWSLDistro.markdownDescription":"WSL-Distribution, die verwendet werden soll, wenn ein WSL-Ordner nicht wieder geöffnet wird. Standardmäßig wird die Standard-WSL-Distribution verwendet (siehe `wsl -l`). Diese Einstellung hat keine Auswirkung, wenn `#dev.containers.executeInWSL#` nicht aktiviert ist oder auf anderen Plattformen als Windows.","configuration.experimentalLockfile.description":"Steuert, ob eine experimentelle devcontainer-lock.json geschrieben werden soll. Diese Funktionalität ist noch experimentell und kann sich in Zukunft ändern.","configuration.forwardWSLServices.description":"Steuert, ob Dienste in WSL (SSH-Agent, GPG-Agent, X-Anzeige, Wayland-Anzeige) an den Container weitergeleitet werden. Diese Einstellung hat keine Auswirkungen auf andere Plattformen als Windows.","configuration.gitCredentialHelperConfigLocation.deprecationMessage":"Verwenden Sie stattdessen 'dev.containers.gitCredentialHelperConfigLocation'.","configuration.gitCredentialHelperConfigLocation.description":"Gibt an, wo die Konfiguration für das Git-Anmeldeinformationen-Hilfsprogramm geschrieben werden soll.","configuration.gitCredentialHelperConfigLocation.global":"In Benutzerkonfiguration schreiben (`~/.gitconfig`).","configuration.gitCredentialHelperConfigLocation.markdownDeprecationMessage":"Verwenden Sie stattdessen `#dev.containers.gitCredentialHelperConfigLocation#`.","configuration.gitCredentialHelperConfigLocation.none":"Legen Sie kein Anmeldeinformationen-Hilfsprogramm fest.","configuration.gitCredentialHelperConfigLocation.system":"Schreiben in die Systemkonfiguration (`/etc/gitconfig`, Stammzugriff erforderlich).","configuration.gpuAvailability.all":"Alle GPUs sind verfügbar. Dies erwartet, dass der Host über eine GPU verfügt.","configuration.gpuAvailability.description":"Verfügbarkeit von GPUs, wenn für einen Dev Container ein beliebiger erforderlich ist.","configuration.gpuAvailability.detect":"Verfügbarkeit sollte automatisch erkannt werden.","configuration.gpuAvailability.none":"Es sind keine GPUs verfügbar.","configuration.logLevel.deprecationMessage":"Verwenden Sie stattdessen 'dev.containers.logLevel'.","configuration.logLevel.description":"Die Protokollebene für die Erweiterung.","configuration.logLevel.markdownDeprecationMessage":"Verwenden Sie stattdessen `#dev.containers.logLevel#`.","configuration.mountWaylandSocket.markdownDescription":"Steuert, ob ein Wayland-Socket, falls vorhanden, in den Entwicklungscontainer eingebunden werden soll.","configuration.optimisticallyLaunchDocker.description":"Es wird versucht, Docker zu starten, wenn der Daemon noch nicht ausgeführt wird.","configuration.repositoryConfigurationPaths.deprecationMessage":"Verwenden Sie stattdessen 'dev.containers.repositoryConfigurationPaths'.","configuration.repositoryConfigurationPaths.markdownDeprecationMessage":"Verwenden Sie stattdessen `#dev.containers.repositoryConfigurationPaths#`.","configuration.repositoryConfigurationPaths.markdownDescription":"Liste der zusätzlichen Pfade für die Suche nach [Repositorykonfigurationen](https://code.visualstudio.com/docs/devcontainers/create-dev-container#_alternative-repository-configuration-folders).","configuration.title":"Entwicklungscontainer","configuration.workspaceMountConsistency.cached":"Die Hostansicht hat Vorrang.","configuration.workspaceMountConsistency.consistent":"Perfekte Konsistenz.","configuration.workspaceMountConsistency.delegated":"Die Ansicht des Containers hat Vorrang.","configuration.workspaceMountConsistency.deprecationMessage":"Verwenden Sie stattdessen 'dev.containers.workspaceMountConsistency'.","configuration.workspaceMountConsistency.description":"Die Konsistenzebene, die für die Einbindung des Arbeitsbereichs verwendet wird (vorhandene Container müssen neu erstellt werden, damit sie wirksam werden).","configuration.workspaceMountConsistency.markdownDeprecationMessage":"Verwenden Sie stattdessen `#dev.containers.workspaceMountConsistency#`.","continueEditSession.containerVolume":"Weiterarbeiten in Containervolume","description":"Öffnen Sie alle Ordner oder Repositorys in einem Docker-Container und nutzen Sie den vollständigen Funktionssatz von Visual Studio Code.","displayName":"Entwicklungscontainer","resourceLabelFormatters.attached-container.workspaceSuffix":"Container","resourceLabelFormatters.dev-container.workspaceSuffix":"Entwicklungscontainer","resourceLabelFormatters.exec.workspaceSuffix":"Ausführen","resourceLabelFormatters.k8s-container.workspaceSuffix":"Kubernetes","views.remote.detailsContainers":"Details (Container)","views.remote.devVolumes":"Entwicklungsvolumes","views.remote.targetsContainers":"Entwicklungscontainer","viewsWelcome.devVolumes.noDevVolumes":"Wenn Sie mit einem Repository arbeiten möchten, können Sie dieses direkt in eine Containervolume klonen.\n[Repository in Containervolume klonen](command:remote-containers.openRepositoryInUniqueVolume)\n","viewsWelcome.targetsContainers.needsDockerStartOrInstall":"Beginnen Sie mit Containern, indem Sie [Docker installieren](command:remote-containers.installDocker) oder die [Hilfe-Ansicht](command:~remote.helpPanel.focus) aufrufen. [Aktualisieren](command:remote-containers.explorerTargetsRefresh) nach der Installation und dem Start.","viewsWelcome.targetsContainers.needsSSHCredentials":"[Aktualisieren](command:remote-containers.explorerTargetsRefresh) zum Bereitstellen von SSH-Anmeldeinformationen.","viewsWelcome.targetsContainers.noContainersWithFolder":"Beginnen Sie mit Containern, indem Sie einen der [Entwicklungscontainer](command:remote-containers.newContainer)-Befehle ausführen.\nSie können [den aktuellen Ordner in einem Container erneut öffnen](command:remote-containers.reopenInContainer) oder einen anderen Ordner in einem Container öffnen.\n[Ordner im Container öffnen](command:remote-containers.openFolder)\nWenn Sie noch nicht mit Containern gearbeitet haben und [ein Beispiel ausprobieren möchten](command:remote-containers.trySample), können Sie aus mehreren auswählen.","viewsWelcome.targetsContainers.noContainersWithoutFolder":"Beginnen Sie mit Containern, indem Sie einen der [Entwicklungscontainer](command:remote-containers.newContainer)-Befehle ausführen.\nSie können einen vorhandenen Ordner in einem Container öffnen.\n[Ordner in Container öffnen](command:remote-containers.openFolder)\nWenn Sie noch nicht mit Containern gearbeitet haben und [ein Beispiel ausprobieren möchten](command:remote-containers.trySample), können Sie aus mehreren auswählen."}
