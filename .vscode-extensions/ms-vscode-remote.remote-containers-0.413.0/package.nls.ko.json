{"capabilities.untrustedWorkspaces.description":"컨테이너에서 폴더를 열려면 작업 영역 신뢰가 필요합니다.","command.addExtensionToConfig":"devcontainer.json에 추가","command.attachToContainerInCurrentWindow":"현재 창에서 연결","command.attachToContainerInNewWindow":"새 창에 첨부","command.attachToK8sContainer":"실행 중인 Kubernetes 컨테이너에 연결...","command.attachToK8sContainerFromViewlet":"Visual Studio Code 첨부","command.attachToRunningContainer":"실행 중인 컨테이너에 연결...","command.attachToRunningContainerFromViewlet":"Attach Visual Studio Code","command.category":"개발 컨테이너","command.checkoutPRInVolume":"개발 컨테이너의 체크아웃 풀 요청","command.cleanUpDevContainers":"개발 컨테이너 정리...","command.cloneInVolume":"볼륨의 복제 리포지토리","command.cloneInVolumeFromViewlet":"기존 볼륨에 복제","command.configureContainerFeatures":"컨테이너 기능 구성...","command.createDevContainer":"새 개발 컨테이너...","command.createDevContainerFile":"개발 컨테이너 구성 파일 추가...","command.createDevContainerFileWithCopilot":"GitHub Copilot을 사용하여 개발자 컨테이너 구성 파일 추가...","command.developerCategory":"Dev Containers 개발자","command.explorerDetailsRefresh":"새로 고침","command.explorerTargetsRefresh":"새로 고침","command.explorerVolumesRefresh":"새로 고침","command.getHelp":"도움말","command.getStarted":"개발 컨테이너 시작하기","command.inspectDockerResource":"검사","command.inspectInBasicDevContainer":"개발 컨테이너에서 탐색","command.inspectVolume":"개발 컨테이너에서 볼륨 탐색...","command.inspectVolumeFromViewlet":"개발 컨테이너에서 탐색","command.installDocker":"Docker 설치","command.installDockerInWSL":"WSL에 Docker 설치","command.installUserCLI":"devcontainer CLI 설치","command.labelPortAndUpdateConfig":"레이블 설정 및 devcontainer.json 업데이트","command.newContainer":"새로운 개발 컨테이너","command.openAttachConfigByNameFile":"명명된 컨테이너 구성 파일 열기","command.openAttachDevContainerFile":"연결된 컨테이너 구성 파일 열기...","command.openDevContainerFile":"컨테이너 구성 파일 열기","command.openFolder":"컨테이너에서 폴더 열기...","command.openFolderInContainerInCurrentWindow":"현재 창에서 컨테이너에서 열기","command.openFolderInContainerInNewWindow":"새 창에서 컨테이너에서 열기","command.openInformationAboutMountPerformance":"I/O 성능을 향상시키려면 Docker 볼륨에 리포지토리를 복제하세요.","command.openLastLogFile":"이전 로그 표시","command.openLogFile":"모든 로그 표시...","command.openPullRequestInVolume":"컨테이너 볼륨에서 GitHub 끌어오기 요청 복제...","command.openRepositoryFromGitWithEditSession":"컨테이너 볼륨의 복제 리포지토리","command.openRepositoryFromRemoteHubWithEditSession":"컨테이너 볼륨의 복제 리포지토리","command.openRepositoryInUniqueVolume":"컨테이너 볼륨의 복제 리포지토리...","command.openRepositoryInVolume":"명명된 컨테이너 볼륨에서 리포지토리 복제...","command.openWorkspace":"컨테이너에서 작업 영역 열기...","command.provideFeedback":"피드백 제공","command.pruneVolumes":"개발 볼륨 정리...","command.rebuildAndReopenInContainer":"컨테이너에서 다시 빌드하고 다시 열기","command.rebuildContainer":"컨테이너 다시 빌드","command.rebuildContainerNoCache":"캐시 없이 컨테이너 재구축","command.rebuildNoCacheAndReopenInContainer":"캐시 없이 다시 빌드하고 컨테이너에서 다시 열기","command.removeContainer":"컨테이너 제거","command.removeRecentFolder":"최근 폴더 제거","command.removeVolume":"제거","command.reopenInContainer":"컨테이너에서 다시 열기","command.reopenInSSH":"SSH에서 폴더 다시 열기","command.reopenInTunnel":"Tunnel에서 폴더 다시 열기","command.reopenInWSL":"WSL에서 폴더 다시 열기","command.reopenLocally":"로컬에서 폴더 다시 열기","command.reportIssue":"문제 보고...","command.revealLogTerminal":"컨테이너 로그 표시","command.settings":"설정","command.showContainerLog":"컨테이너 로그 표시","command.showDetails":"세부 정보 표시","command.showRecoveryContainerNotificationReset":"다시 설정 복구 컨테이너 알림 표시 안 함","command.showReopenInContainerNotificationReset":"다시 열기 알림 표시 안 함 다시 설정","command.startContainer":"컨테이너 시작","command.stopContainer":"컨테이너 중지","command.switchContainer":"컨테이너 전환","command.testConnection":"테스트 연결","command.trySample":"개발 컨테이너 샘플 사용해 보기...","configuration.cacheVolume.deprecationMessage":"대신 'dev.containers.cacheVolume'을 사용하세요.","configuration.cacheVolume.description":"VS Code 서버와 확장을 캐시하는 데 Docker 볼륨을 사용해야 하는지 여부를 제어합니다.","configuration.cacheVolume.markdownDeprecationMessage":"대신 `#dev.containers.cacheVolume#`을 사용하세요.","configuration.copyGitConfig.deprecationMessage":"대신 'dev.containers.copyGitConfig'를 사용하세요.","configuration.copyGitConfig.markdownDeprecationMessage":"대신 `#dev.containers.copyGitConfig#`를 사용하세요.","configuration.copyGitConfig.markdownDescription":"Git 구성(`~/.gitconfig`)을 컨테이너에 복사할지 여부를 제어합니다. 이 작업은 `#dotfiles.repository#`를 설치한 후에 수행되며 기존 Git 구성 파일을 덮어쓰지 않습니다.","configuration.defaultExtensions.deprecationMessage":"대신 'dev.containers.defaultExtensions'를 사용하세요.","configuration.defaultExtensions.description":"컨테이너를 생성하는 동안 항상 설치할 확장 목록을 구성합니다.","configuration.defaultExtensions.errorMessage":"필요한 형식은 '${publisher}.${name}'입니다. 예: 'vscode.csharp'","configuration.defaultExtensions.markdownDeprecationMessage":"대신 `#dev.containers.defaultExtensions#`를 사용하세요.","configuration.defaultFeatures":"컨테이너를 생성하는 동안 항상 설치할 기능 목록을 구성합니다.","configuration.dockerComposePath.deprecationMessage":"대신 'dev.containers.dockerComposePath'를 사용하세요.","configuration.dockerComposePath.description":"Docker Compose 실행 파일 이름 또는 경로입니다.","configuration.dockerComposePath.markdownDeprecationMessage":"대신 `#dev.containers.dockerComposePath#`를 사용하세요.","configuration.dockerCredentialHelper.markdownDescription":"자격 증명 도우미가 dev 컨테이너의 Docker 구성(`~/.docker/config.json`)에서 `credStore`로 등록되어야 하는지 여부를 제어합니다. 이 작업은 구성 파일의 기존 `credStore` 항목을 덮어쓰지 않습니다.","configuration.dockerPath.deprecationMessage":"대신 'dev.containers.dockerPath'를 사용하세요.","configuration.dockerPath.description":"Docker(또는 Podman) 실행 파일 이름 또는 경로입니다.","configuration.dockerPath.markdownDeprecationMessage":"대신 `#dev.containers.dockerPath#`를 사용하세요.","configuration.dockerSocketPath.description":"Docker 소켓 경로입니다. 예를 들어 Docker 볼륨의 devcontainer.json을 사용하여 Dev 컨테이너에 연결할 때 사용됩니다.","configuration.dotfiles.installCommand.deprecationMessage":"대신 'dotfiles.installCommand'를 사용하세요.","configuration.dotfiles.installCommand.description":"dotfiles 리포지토리를 복제한 후 실행할 명령입니다. 기본적으로 dotfiles 리포지토리의 루트 폴더에 있는 `install.sh`, `install`, `bootstrap.sh`, `bootstrap`, `setup.sh` 및 `setup`의 첫 번째 파일을 실행합니다.","configuration.dotfiles.installCommand.markdownDeprecationMessage":"대신 `#dotfiles.installCommand#`을 사용하세요.","configuration.dotfiles.repository.deprecationMessage":"대신 'dotfiles.repository'를 사용하세요.","configuration.dotfiles.repository.description":"dotfiles Git 리포지토리의 URL(예: https://github.com/owner/repository.git) 또는 GitHub 리포지토리의 소유자/리포지토리입니다.","configuration.dotfiles.repository.markdownDeprecationMessage":"대신 `#dotfiles.repository#`을 사용하세요.","configuration.dotfiles.targetPath.deprecationMessage":"대신 'dotfiles.targetPath'를 사용하세요.","configuration.dotfiles.targetPath.description":"dotfiles 리포지토리를 복제할 경로입니다. 기본값은 `~/dotfiles`입니다.","configuration.dotfiles.targetPath.markdownDeprecationMessage":"대신 `#dotfiles.targetPath#`를 사용하세요.","configuration.executeInWSL.deprecationMessage":"대신 'dev.containers.executeInWSL'를 사용하세요.","configuration.executeInWSL.description":"CLI 명령이 항상 WSL에서 실행되어야 하는지 여부를 제어합니다. 기본값은 WSL의 작업 영역 폴더에 대해서만 WSL에서 실행하는 것입니다. 이 설정은 Windows 이외의 다른 플랫폼에는 영향을 주지 않습니다.","configuration.executeInWSL.markdownDeprecationMessage":"대신 `#dev.containers.executeInWSL#`을 사용하세요.","configuration.executeInWSLDistro.deprecationMessage":"대신 'dev.containers.executeInWSLDistro'를 사용하세요.","configuration.executeInWSLDistro.markdownDeprecationMessage":"대신 `#dev.containers.executeInWSLDistro#`을 사용하세요.","configuration.executeInWSLDistro.markdownDescription":"WSL 폴더를 다시 열지 않을 때 사용할 WSL 배포판입니다. 기본값은 기본 WSL 배포판을 사용하는 것입니다(`wsl -l` 참조). 이 설정은 `#dev.containers.executeInWSL#`이 활성화되지 않았거나 Windows 이외의 다른 플랫폼에 있는 경우에는 적용되지 않습니다.","configuration.experimentalLockfile.description":"실험적인 devcontainer-lock.json을 작성해야 하는지 여부를 제어합니다. 이 기능은 실험적이며 향후 변경될 수 있습니다.","configuration.forwardWSLServices.description":"WSL의 서비스(SSH 에이전트, GPG 에이전트, X 디스플레이, Wayland 디스플레이)를 컨테이너로 전달할지 여부를 제어합니다. 이 설정은 Windows 이외의 다른 플랫폼에는 영향을 주지 않습니다.","configuration.gitCredentialHelperConfigLocation.deprecationMessage":"대신 'dev.containers.gitCredentialHelperConfigLocation'을 사용하세요.","configuration.gitCredentialHelperConfigLocation.description":"Git 자격 증명 도우미에 대한 구성을 작성하는 위치입니다.","configuration.gitCredentialHelperConfigLocation.global":"사용자 구성(`~/.gitconfig`)에 씁니다.","configuration.gitCredentialHelperConfigLocation.markdownDeprecationMessage":"대신 `#dev.containers.gitCredentialHelperConfigLocation#`을 사용하세요.","configuration.gitCredentialHelperConfigLocation.none":"자격 증명 도우미를 설정하지 마세요.","configuration.gitCredentialHelperConfigLocation.system":"시스템 구성에 쓰기(`/etc/gitconfig`, 루트 액세스 필요).","configuration.gpuAvailability.all":"모든 GPU를 사용할 수 있습니다. 이 경우 호스트에 GPU가 있어야 합니다.","configuration.gpuAvailability.description":"개발 컨테이너에 필요한 GPU의 가용성입니다.","configuration.gpuAvailability.detect":"가용성은 자동으로 검색되어야 합니다.","configuration.gpuAvailability.none":"사용할 수 있는 GPU가 없습니다.","configuration.logLevel.deprecationMessage":"대신 'dev.containers.logLevel'을 사용하세요.","configuration.logLevel.description":"확장의 로그 수준입니다.","configuration.logLevel.markdownDeprecationMessage":"대신 `#dev.containers.logLevel#`을 사용하세요.","configuration.mountWaylandSocket.markdownDescription":"Wayland 소켓(있는 경우)을 개발 컨테이너에 탑재할지 여부를 제어합니다.","configuration.optimisticallyLaunchDocker.description":"디먼이 아직 실행되고 있지 않은 경우 Docker 시작을 낙관적으로 시도합니다.","configuration.repositoryConfigurationPaths.deprecationMessage":"대신 'dev.containers.repositoryConfigurationPaths'를 사용하세요.","configuration.repositoryConfigurationPaths.markdownDeprecationMessage":"대신 `#dev.containers.repositoryConfigurationPaths#`를 사용하세요.","configuration.repositoryConfigurationPaths.markdownDescription":"[리포지토리 구성](https://code.visualstudio.com/docs/devcontainers/create-dev-container#_alternative-repository-configuration-folders)을 검색할 추가 경로 목록입니다.","configuration.title":"개발 컨테이너","configuration.workspaceMountConsistency.cached":"호스트의 보기는 신뢰할 수 있습니다.","configuration.workspaceMountConsistency.consistent":"완벽한 일관성.","configuration.workspaceMountConsistency.delegated":"컨테이너 뷰에 권한이 있습니다.","configuration.workspaceMountConsistency.deprecationMessage":"대신 'dev.containers.workspaceMountConsistency'를 사용하세요.","configuration.workspaceMountConsistency.description":"작업 영역 탑재에 사용되는 일관성 수준입니다(적용하려면 기존 컨테이너를 다시 빌드해야 함).","configuration.workspaceMountConsistency.markdownDeprecationMessage":"대신 `#dev.containers.workspaceMountConsistency#`를 사용하세요.","continueEditSession.containerVolume":"컨테이너 볼륨에서 계속 작업","description":"Docker 컨테이너 내에서 폴더 또는 리포지토리를 열고 Visual Studio Code 전체 기능 집합을 활용합니다.","displayName":"개발 컨테이너","resourceLabelFormatters.attached-container.workspaceSuffix":"컨테이너","resourceLabelFormatters.dev-container.workspaceSuffix":"개발 컨테이너","resourceLabelFormatters.exec.workspaceSuffix":"Exec","resourceLabelFormatters.k8s-container.workspaceSuffix":"쿠버네티스","views.remote.detailsContainers":"세부 정보(컨테이너)","views.remote.devVolumes":"개발 볼륨","views.remote.targetsContainers":"개발 컨테이너","viewsWelcome.devVolumes.noDevVolumes":"작업하려는 리포지토리가 있는 경우 컨테이너 볼륨에서 직접 복제할 수 있습니다.\n [컨테이너 볼륨에서 리포지토리 복제](command:remote-containers.openRepositoryInUniqueVolume)\n","viewsWelcome.targetsContainers.needsDockerStartOrInstall":"[Docker 설치](command:remote-containers.installDocker) 또는 [도움말 보기](command:~remote.helpPanel.focus)를 방문하여 컨테이너를 시작하세요. 설치 및 시작 후 [새로 고치세요](command:remote-containers.explorerTargetsRefresh).","viewsWelcome.targetsContainers.needsSSHCredentials":"SSH 자격 증명을 제공하려면 [새로 고치세요](command:remote-containers.explorerTargetsRefresh).","viewsWelcome.targetsContainers.noContainersWithFolder":"[Dev Containers](command:remote-containers.newContainer) 명령 중 하나를 실행하여 컨테이너를 시작하세요.\n[컨테이너의 현재 폴더를 다시 열거나](command:remote-containers.reopenInContainer) 컨테이너의 다른 폴더를 열 수 있습니다.\n[컨테이너에서 폴더 열기](command:remote-containers.openFolder)\n컨테이너를 처음 사용하고 [샘플을 시도](command:remote-containers.trySample)하려는 경우 선택할 수 있는 몇 가지가 있습니다.","viewsWelcome.targetsContainers.noContainersWithoutFolder":"[Dev Containers](command:remote-containers.newContainer) 명령 중 하나를 실행하여 컨테이너를 시작하세요.\n컨테이너에서 기존 폴더를 열 수 있습니다.\n[컨테이너에서 폴더 열기](command:remote-containers.openFolder)\n컨테이너를 처음 사용하고 [샘플을 시도](command:remote-containers.trySample)하려는 경우 선택할 수 있는 몇 가지가 있습니다."}
