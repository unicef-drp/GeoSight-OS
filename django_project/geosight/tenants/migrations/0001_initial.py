# Generated by Django 3.2.16 on 2024-08-31 10:27

from django.db import migrations, models
import django.db.models.deletion
import django_tenants.postgresql_backend.base
import timezone_field.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('django_celery_beat', '0016_alter_crontabschedule_timezone'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContentLimitation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_field_group', models.CharField(blank=True, editable=False, help_text='The model field group that will be used to group the limitation. e.g: Limit a Model by the field group. If it is empty, it will limit all of data.', max_length=126, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('content_type', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schema_name', models.CharField(db_index=True, max_length=63, unique=True, validators=[django_tenants.postgresql_backend.base._check_schema_name])),
                ('timezone', timezone_field.fields.TimeZoneField(default='UTC')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('responder_email', models.EmailField(blank=True, help_text='Email address who has response for this client', max_length=254, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PeriodicTaskTenantLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('use_tenant_timezone', models.BooleanField(default=False)),
                ('periodic_task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='periodic_task_tenant_link', to='django_celery_beat.periodictask')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='periodic_task_tenant_links', to='geosight_tenants.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(db_index=True, max_length=253, unique=True)),
                ('is_primary', models.BooleanField(db_index=True, default=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='domains', to='geosight_tenants.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContentLimitationTenant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('limit', models.IntegerField(blank=True, help_text='Limit of data allowed to the content_type.', null=True)),
                ('content_limitation', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='geosight_tenants.contentlimitation')),
                ('tenant', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='geosight_tenants.tenant')),
            ],
            options={
                'ordering': ('content_limitation',),
                'unique_together': {('content_limitation', 'tenant')},
            },
        ),
    ]
