# Generated by Django 2.2.12 on 2020-07-03 09:03

from django.db import migrations

from geosight.data.models.dashboard.dashboard_indicator_layer import (
    TYPE_SINGLE_INDICATOR,
    TYPE_MULTI_INDICATOR,
    TYPE_DYNAMIC_INDICATOR,
    TYPE_RELATED_TABLE
)


def run(apps, schema_editor):
    DashboardIndicator = apps.get_model(
        'geosight_data', 'DashboardIndicator'
    )
    DashboardIndicatorLayer = apps.get_model(
        'geosight_data', 'DashboardIndicatorLayer'
    )
    DashboardIndicatorLayerRule = apps.get_model(
        'geosight_data', 'DashboardIndicatorLayerRule'
    )
    for layer in DashboardIndicatorLayer.objects.all():
        if layer.type not in [
            TYPE_MULTI_INDICATOR,
            TYPE_DYNAMIC_INDICATOR,
            TYPE_RELATED_TABLE
        ]:
            layer_indicator = layer.dashboardindicatorlayerindicator_set.first(
            )
            if layer_indicator:
                try:
                    indicator = DashboardIndicator.objects.get(
                        dashboard=layer.dashboard,
                        object=layer_indicator.indicator
                    )
                    layer.type = TYPE_SINGLE_INDICATOR
                    layer.dashboardindicatorlayerrule_set.all().delete()
                    layer.override_style = indicator.override_style
                    layer.override_label = indicator.override_label
                    layer.style_type = indicator.style_type
                    layer.style = indicator.style
                    layer.style_config = indicator.style_config
                    layer.label_config = indicator.label_config
                    layer.save()
                    for rule in indicator.dashboardindicatorrule_set.all():
                        DashboardIndicatorLayerRule.objects.create(
                            object=layer,
                            name=rule.name,
                            rule=rule.rule,
                            color=rule.color,
                            outline_color=rule.outline_color,
                            outline_size=rule.outline_size,
                            order=rule.order,
                            active=rule.active,
                        )

                except DashboardIndicator.DoesNotExist:
                    pass


class Migration(migrations.Migration):
    dependencies = [
        ('geosight_data', '0109_auto_20240925_1058')
    ]

    operations = [
        migrations.RunPython(run, migrations.RunPython.noop),
    ]
