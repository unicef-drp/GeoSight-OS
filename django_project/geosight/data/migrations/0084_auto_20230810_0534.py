# Generated by Django 3.2.16 on 2023-08-10 05:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('geosight_data', '0083_dashboard_overview'),
    ]

    operations = [
        migrations.AddField(
            model_name='dashboardindicatorlayer',
            name='multi_indicator_mode',
            field=models.CharField(choices=[('Chart', 'Chart'), ('Pin', 'Pin')], default='Chart', max_length=24),
        ),
        migrations.AddField(
            model_name='dashboardindicatorlayerindicator',
            name='label_config',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dashboardindicatorlayerindicator',
            name='override_style',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='dashboardindicatorlayerindicator',
            name='style',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='geosight_data.style'),
        ),
        migrations.AddField(
            model_name='dashboardindicatorlayerindicator',
            name='style_config',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dashboardindicatorlayerindicator',
            name='style_type',
            field=models.CharField(choices=[('Predefined style/color rules.', 'Predefined style/color rules.'), ('Dynamic quantitative style.', 'Dynamic quantitative style.'), ('Dynamic qualitative style.', 'Dynamic qualitative style.'), ('Style from library.', 'Style from library.')], default='Style from library.', max_length=256),
        ),
        migrations.CreateModel(
            name='DashboardIndicatorLayerIndicatorRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('rule', models.CharField(help_text='Use formula to create the rule and use x as the value.Example: x<100. It will replace x with the value and will check the condition.', max_length=256)),
                ('color', models.CharField(blank=True, help_text='Color of the rule', max_length=16, null=True)),
                ('outline_color', models.CharField(default='#000000', help_text='Color for the outline of geometry on map.', max_length=16)),
                ('outline_size', models.FloatField(default=0.5)),
                ('order', models.IntegerField(default=0)),
                ('active', models.BooleanField(default=True)),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geosight_data.dashboardindicatorlayerindicator')),
            ],
            options={
                'ordering': ('order',),
                'unique_together': {('object', 'name')},
            },
        ),
    ]
